---
description: cursor-rules01
globs: 
alwaysApply: false
---
# Cursor 开发流程规则（rules01）

1. **每次优化任何模块的功能，都必须将优化的进度和内容详细更新到 `README.md` 文档中。**  
   - 包括优化的模块、优化内容、优化前后对比、已完成与待完成事项等。
   - 建议在 `README.md` 中设立"开发进度"或"更新日志"板块，便于追踪。

2. **每次将优化进度更新到 `README.md` 文档后，必须立即将优化后的进度推送到 GitHub 仓库。**  
   - 操作流程：  
     1. `git add .`  
     2. `git commit -m "更新README，记录xxx模块优化进度"`  
     3. `git push`  
   - 保证每次优化和文档同步后，远程仓库始终保持最新进度。

3. **每次将优化更新内容推送到 GitHub 后，需重新检查项目的其他文件和模块功能，按照项目文件的剩余开发进度继续开发实现。**  
   - 检查方式：  
     - 审查 `README.md` 的开发进度板块，明确剩余开发任务。
     - 检查代码目录和模块，识别未完成或可优化的部分。
   - 开发流程：  
     1. 明确下一个开发目标。
     2. 按照上述规则，循环进行开发、文档更新、推送和检查。

---
## 建议的 `README.md` 进度板块模板

```markdown
## 开发进度

| 日期       | 模块/文件         | 优化/开发内容           | 状态   | 备注           |
| ---------- | ---------------- | ---------------------- | ------ | -------------- |
| 2024-06-01 | src/xxx.py       | 优化数据处理逻辑        | 已完成 | 性能提升20%    |
| 2024-06-02 | tests/test_xxx.py| 新增单元测试           | 进行中 | 覆盖率待提升   |
```

---

## 建议的自动化规则

- **建议使用脚本辅助推送和自动检测 `README.md` 变更**：
  - 可编写自动化脚本，检测 `README.md` 是否有变更，若有则自动执行推送操作。
  - 通过自动化工具（如 Git 钩子、CI/CD 流程等）提升开发流程的自动化和规范性，减少人为疏漏。

---

> 本规则文件建议纳入项目根目录，团队成员须共同遵守。 
